import { ElementRef, OnInit, Renderer2, AfterViewInit } from '@angular/core';
import { TranslationService } from "./translation.service";
import * as i0 from "@angular/core";
interface EnabledTools {
    contrast: string;
    links: string;
    biggerText: string;
    textSpacing: string;
    imagesRemove: string;
    lineHeight: string;
    saturation: string;
    mouseCursor: string;
    siteStructure: string;
    tooltips: string;
    readableText: string;
    stopAnimation: string;
}
export declare class AccessFlowComponent implements OnInit, AfterViewInit {
    private document;
    private element;
    private renderer;
    private translationService;
    footer: ElementRef | undefined;
    languages: ElementRef | undefined;
    header: ElementRef | undefined;
    toolsContainer: ElementRef | undefined;
    searchbarLanguage: ElementRef | undefined;
    size: number;
    position: string;
    showAccessibility: boolean;
    protected enabledTools: EnabledTools;
    languageSearch: string;
    intervalTooltip: any;
    openLanguage: boolean;
    availableLanguages: any;
    selectedLanguage: any;
    onResize(event: any): void;
    onKeydownHandler(event: KeyboardEvent): void;
    onMousemoveHandler(event: MouseEvent): void;
    constructor(document: Document, element: ElementRef, renderer: Renderer2, translationService: TranslationService);
    getBrowserLanguage(): string;
    isLanguageInSearch(language: any): boolean;
    changeOpenLanguage(): void;
    changeLanguage(language: string): void;
    calculateToolsHeight(): void;
    openTooltip(event: any, element: any): void;
    getAllParentInfos(element: any): string;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    openAccessibility(): void;
    enableTool(tool: string): void;
    removeOldTooltip(withTimeout?: boolean): void;
    openGithubIssues(): void;
    openGithub(): void;
    checkTools(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AccessFlowComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<AccessFlowComponent, "access-flow", never, { "size": { "alias": "size"; "required": false; }; "position": { "alias": "position"; "required": false; }; "showAccessibility": { "alias": "showAccessibility"; "required": false; }; }, {}, never, never, false, never>;
}
export {};
